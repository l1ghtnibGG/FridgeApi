// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fridges.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Fridge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OwnerName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Fridges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a2ec2ca-7886-4b81-b5ab-30f4ab3e963c"),
                            ModelId = new Guid("48250ce5-86e9-46be-9e07-e71c8fc25c52"),
                            Name = "Siemens",
                            OwnerName = "Sasha"
                        },
                        new
                        {
                            Id = new Guid("e03fc2b2-ae8d-4fbd-81f6-0fd2402bd412"),
                            ModelId = new Guid("0685ac44-3c7b-447d-871a-ab0a35f46fbf"),
                            Name = "LG",
                            OwnerName = "Vika"
                        },
                        new
                        {
                            Id = new Guid("cd2876e1-5fe3-43a3-bb79-646c48ae098c"),
                            ModelId = new Guid("ea764e6f-4e50-4576-bb65-de9ac6372d0c"),
                            Name = "Samsung",
                            OwnerName = "Petr"
                        });
                });

            modelBuilder.Entity("Entities.Models.FridgeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FridgeModels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("48250ce5-86e9-46be-9e07-e71c8fc25c52"),
                            Name = "KI39FP60",
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("0685ac44-3c7b-447d-871a-ab0a35f46fbf"),
                            Name = "GR-N309 LLB",
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("ea764e6f-4e50-4576-bb65-de9ac6372d0c"),
                            Name = "RB30J3000WW",
                            Year = 2021
                        });
                });

            modelBuilder.Entity("Entities.Models.FridgeProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FridgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FridgeId");

                    b.HasIndex("ProductId");

                    b.ToTable("FridgeProducts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af76494a-5c6f-4fa2-8dd0-3851066d27d9"),
                            FridgeId = new Guid("1a2ec2ca-7886-4b81-b5ab-30f4ab3e963c"),
                            ProductId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("66c493b6-7fe3-496a-a234-5beec9f58b47"),
                            FridgeId = new Guid("1a2ec2ca-7886-4b81-b5ab-30f4ab3e963c"),
                            ProductId = new Guid("f08adfd1-1449-4812-926d-65f60a71491a"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("634d3cdd-ff32-49b1-81e0-1c55b1ccad79"),
                            FridgeId = new Guid("e03fc2b2-ae8d-4fbd-81f6-0fd2402bd412"),
                            ProductId = new Guid("f08adfd1-1449-4812-926d-65f60a71491a"),
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("2ce408cc-7448-43c7-8755-cd22370cd8cb"),
                            FridgeId = new Guid("e03fc2b2-ae8d-4fbd-81f6-0fd2402bd412"),
                            ProductId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("89c212ce-4e87-4658-a6a1-ea2eae044df0"),
                            FridgeId = new Guid("e03fc2b2-ae8d-4fbd-81f6-0fd2402bd412"),
                            ProductId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("3336926d-a697-4a77-a074-defe10f02d95"),
                            FridgeId = new Guid("cd2876e1-5fe3-43a3-bb79-646c48ae098c"),
                            ProductId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Quantity = 10
                        });
                });

            modelBuilder.Entity("Entities.Models.Products", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DefaultQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            DefaultQuantity = 5,
                            Name = "Banana"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            DefaultQuantity = 2,
                            Name = "Meat"
                        },
                        new
                        {
                            Id = new Guid("f08adfd1-1449-4812-926d-65f60a71491a"),
                            DefaultQuantity = 1,
                            Name = "Milk"
                        });
                });

            modelBuilder.Entity("Entities.Models.Fridge", b =>
                {
                    b.HasOne("Entities.Models.FridgeModel", "FridgeModel")
                        .WithMany("Fridges")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FridgeModel");
                });

            modelBuilder.Entity("Entities.Models.FridgeProducts", b =>
                {
                    b.HasOne("Entities.Models.Fridge", "Fridge")
                        .WithMany("FridgeProducts")
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Products", "Products")
                        .WithMany("FridgeProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entities.Models.Fridge", b =>
                {
                    b.Navigation("FridgeProducts");
                });

            modelBuilder.Entity("Entities.Models.FridgeModel", b =>
                {
                    b.Navigation("Fridges");
                });

            modelBuilder.Entity("Entities.Models.Products", b =>
                {
                    b.Navigation("FridgeProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
